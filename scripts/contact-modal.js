/**
 * contact-modal.js
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
 */

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
initContactModal();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Public Key)
if (typeof emailjs !== 'undefined') {
    // –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_PUBLIC_KEY' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
    // emailjs.init('YOUR_PUBLIC_KEY');
    console.log('üìß EmailJS library loaded');
} else {
    console.log('‚ö†Ô∏è EmailJS library not loaded, using simulation mode');
}

function initContactModal() {
    console.log('üîÑ Initializing contact modal...');
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const modal = document.getElementById('contact-modal');
    const form = document.getElementById('contact-form');
    const successMessage = document.getElementById('contact-success');
    const closeBtn = document.getElementById('close-contact-modal');
    const cancelBtn = document.getElementById('cancel-contact');
    const successOkBtn = document.getElementById('success-ok');

    if (!modal) {
        console.log('‚ùå Contact modal not found in DOM');
        return;
    }

    console.log('‚úÖ Contact modal found, setting up...');

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function openContactModal() {
        modal.classList.add('show');
        document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ
        setTimeout(() => {
            const firstInput = document.getElementById('contact-name');
            if (firstInput) firstInput.focus();
        }, 300);
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeContactModal() {
        modal.classList.remove('show');
        document.body.style.overflow = ''; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
            if (form) form.reset();
            if (successMessage) successMessage.style.display = 'none';
            if (form) form.style.display = 'flex';
        }, 300);
    }

    // –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
    function showSuccessMessage() {
        if (form) form.style.display = 'none';
        if (successMessage) successMessage.style.display = 'block';
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    if (closeBtn) closeBtn.addEventListener('click', closeContactModal);
    if (cancelBtn) cancelBtn.addEventListener('click', closeContactModal);
    if (successOkBtn) successOkBtn.addEventListener('click', closeContactModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ overlay
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeContactModal();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.classList.contains('show')) {
            closeContactModal();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    if (form) {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            handleFormSubmit();
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    async function handleFormSubmit() {
        const submitBtn = form.querySelector('.btn-submit');
        const formData = new FormData(form);
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const contactData = {
            from_name: formData.get('name'),
            from_email: formData.get('email'),
            subject: formData.get('subject'),
            message: formData.get('message'),
            to_name: '◊û◊™◊û◊ò◊ô◊ß◊î ◊ë◊ê◊î◊ë◊î', // –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        };

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!contactData.from_name || !contactData.from_email || !contactData.subject || !contactData.message) {
            alert('◊ê◊†◊ê ◊û◊ú◊ê ◊ê◊™ ◊õ◊ú ◊î◊©◊ì◊ï◊™ ◊î◊†◊ì◊®◊©◊ô◊ù');
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.disabled = true;
        submitBtn.textContent = '◊©◊ï◊ú◊ó...';

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ EmailJS
            console.log('üìß Sending email via EmailJS...');
            
            // –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ
            const serviceID = 'YOUR_SERVICE_ID'; // –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ emailjs.com
            const templateID = 'YOUR_TEMPLATE_ID'; // –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –Ω–∞ emailjs.com
            const publicKey = 'YOUR_PUBLIC_KEY'; // –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ emailjs.com
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ email
            const response = await emailjs.send(serviceID, templateID, contactData, publicKey);
            
            console.log('‚úÖ Email sent successfully:', response);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            showSuccessMessage();
            
        } catch (error) {
            console.error('‚ùå Error sending email:', error);
            
            // –ü–æ–∫–∞ EmailJS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–∏—Ç–∞—Ü–∏—é
            console.log('üìß EmailJS not configured, using simulation...');
            await simulateEmailSend(contactData);
            showSuccessMessage();
        } finally {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            submitBtn.disabled = false;
            submitBtn.textContent = '◊©◊ú◊ó ◊î◊ï◊ì◊¢◊î';
        }
    }

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EmailJS)
    function simulateEmailSend(data) {
        return new Promise((resolve) => {
            console.log('üì© Simulating email send with data:', data);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.log(`
                üìß Email Details:
                From: ${data.from_name} (${data.from_email})
                Subject: ${data.subject}
                Message: ${data.message}
            `);
            
            setTimeout(resolve, 1500); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
        });
    }

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.openContactModal = openContactModal;

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Å—Å—ã–ª–∫–∞–º "◊¶◊ï◊® ◊ß◊©◊®"
    bindContactLinks();
    
    console.log('Contact modal initialized');
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Å—Å—ã–ª–∫–∞–º
function bindContactLinks() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Å—ã–ª–æ–∫
    const checkAndBind = () => {
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ —Å data-page="contact"
        const contactLinks = document.querySelectorAll('a[data-page="contact"]');
        
        if (contactLinks.length > 0) {
            contactLinks.forEach(link => {
                // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                link.removeEventListener('click', handleContactClick);
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
                link.addEventListener('click', handleContactClick);
            });
            
            console.log(`‚úÖ Bound ${contactLinks.length} contact links`);
            return true;
        } else {
            console.log('‚è≥ Contact links not found yet, retrying...');
            return false;
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞
    function handleContactClick(e) {
        e.preventDefault();
        console.log('üîó Contact link clicked');
        if (typeof window.openContactModal === 'function') {
            window.openContactModal();
        } else {
            console.error('‚ùå openContactModal function not available');
        }
    }
    
    // –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å—Ä–∞–∑—É
    if (!checkAndBind()) {
        // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        let attempts = 0;
        const maxAttempts = 10;
        
        const bindInterval = setInterval(() => {
            attempts++;
            if (checkAndBind() || attempts >= maxAttempts) {
                clearInterval(bindInterval);
                if (attempts >= maxAttempts) {
                    console.warn('‚ö†Ô∏è Could not bind contact links after 10 attempts');
                }
            }
        }, 500);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { initContactModal };
}
